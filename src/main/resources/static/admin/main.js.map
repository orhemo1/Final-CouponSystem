{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/company.ts","webpack:///./src/app/common/customer.ts","webpack:///./src/app/componennts/creat-customer/creat-customer.component.css","webpack:///./src/app/componennts/creat-customer/creat-customer.component.html","webpack:///./src/app/componennts/creat-customer/creat-customer.component.ts","webpack:///./src/app/componennts/create-company/create-company.component.css","webpack:///./src/app/componennts/create-company/create-company.component.html","webpack:///./src/app/componennts/create-company/create-company.component.ts","webpack:///./src/app/componennts/get-all-companies/get-all-companies.component.css","webpack:///./src/app/componennts/get-all-companies/get-all-companies.component.html","webpack:///./src/app/componennts/get-all-companies/get-all-companies.component.ts","webpack:///./src/app/componennts/get-all-customers/get-all-customers.component.css","webpack:///./src/app/componennts/get-all-customers/get-all-customers.component.html","webpack:///./src/app/componennts/get-all-customers/get-all-customers.component.ts","webpack:///./src/app/componennts/get-company/get-company.component.css","webpack:///./src/app/componennts/get-company/get-company.component.html","webpack:///./src/app/componennts/get-company/get-company.component.ts","webpack:///./src/app/componennts/get-customer/get-customer.component.css","webpack:///./src/app/componennts/get-customer/get-customer.component.html","webpack:///./src/app/componennts/get-customer/get-customer.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/app-services.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,6BAA6B,2HAA2H,+BAA+B,yBAAyB,iCAAiC,qBAAqB,oBAAoB,wBAAwB,qBAAqB,uBAAuB,kCAAkC,2BAA2B,mBAAmB,sBAAsB,KAAK,qBAAqB,uHAAuH,+BAA+B,KAAK,sBAAsB,wBAAwB,cAAc,KAAK,K;;;;;;;;;;;ACA1rB,wOAAwO,uEAAuE,6LAA6L,0zB;;;;;;;;;;;;;;;;;;;;;;;;;ACAlc;AAC8B;AAMxE;IAEE,sBAAoB,SAA6B;QAA7B,cAAS,GAAT,SAAS,CAAoB;QADjD,UAAK,GAAG,eAAe,CAAC;IAExB,CAAC;IACD,6BAAM,GAAN;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,SAAS,CAC/B,UAAC,IAAI;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEpB,CAAC,CACF;IACA,CAAC;IAXU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG+B,iFAAkB;OAFtC,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACF;AACE;AACN;AACsD;AACT;AACiB;AACR;AACN;AACc;AAC/B;AACA;AA+CxE;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9CrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2GAAsB;gBAEtB,kGAAmB;gBACnB,mHAAwB;gBACxB,2GAAsB;gBACtB,sGAAoB;gBACpB,oHAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;gBACV,4DAAY,CAAC,OAAO,CAClB;oBACE;wBACE,IAAI,EAAE,eAAe;wBACrB,SAAS,EAAE,2GAAsB;qBAClC;oBACA;wBACC,IAAI,EAAE,YAAY;wBAClB,SAAS,EAAE,kGAAmB;qBAC/B,EAAG;wBACF,IAAI,EAAE,iBAAiB;wBACvB,SAAS,EAAE,mHAAwB;qBACpC,EAAG;wBACF,IAAI,EAAE,gBAAgB;wBACtB,SAAS,EAAE,2GAAsB;qBAClC;oBACD;wBACE,IAAI,EAAE,aAAa;wBACnB,SAAS,EAAE,sGAAoB;qBAChC;oBACD;wBACE,IAAI,EAAE,iBAAiB;wBACvB,SAAS,EAAE,oHAAwB;qBACpC;iBAEF,CACF;aACF;YACD,SAAS,EAAE,CAAC,kFAAkB,EAAC,EAAC,OAAO,EAAC,iEAAgB,EAAC,QAAQ,EAAC,qEAAoB,EAAC,CAAC;YACxF,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC3DtB;AAAA;AAAA;IAMI,iBAAmB,MAAgB,EAAQ,QAAkB,EAClD,YAAsB,EAAQ,SAAmB;QADzC,WAAM,GAAN,MAAM,CAAU;QAAQ,aAAQ,GAAR,QAAQ,CAAU;QAClD,iBAAY,GAAZ,YAAY,CAAU;QAAQ,cAAS,GAAT,SAAS,CAAU;QAEpD,IAAI,CAAC,EAAE,GAAE,MAAM,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,QAAQ,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAC,YAAY,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC;IACzB,CAAC;IACT,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACdD;AAAA;AAAA;IAKI,kBAAmB,MAAgB,EAAQ,QAAkB,EAClD,YAAsB;QADd,WAAM,GAAN,MAAM,CAAU;QAAQ,aAAQ,GAAR,QAAQ,CAAU;QAClD,iBAAY,GAAZ,YAAY,CAAU;QACzB,IAAI,CAAC,EAAE,GAAE,MAAM,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,QAAQ,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAC,YAAY,CAAC;IACnC,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;ACZD,mB;;;;;;;;;;;ACAA,uMAAuM,uCAAuC,aAAa,yLAAyL,iBAAiB,2P;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnZ;AACC;AAC2B;AAM9E;IAEE,gCAAoB,SAA4B;QAA5B,cAAS,GAAT,SAAS,CAAmB;QADhD,gBAAW,GAAE,IAAI,gEAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IACiB,CAAC;IAErD,yCAAQ,GAAR;IAEA,CAAC;IACD,4CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE;QAC9B,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,EAAE;IACpC,CAAC;IAZU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAG8B,iFAAkB;OAFrC,sBAAsB,CAalC;IAAD,6BAAC;CAAA;AAbkC;;;;;;;;;;;;ACRnC,mB;;;;;;;;;;;ACAA,qNAAqN,uCAAuC,MAAM,aAAa,2KAA2K,MAAM,iBAAiB,6LAA6L,MAAM,cAAc,uN;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhnB;AACD;AAC6B;AAO9E;IAEE,gCAAoB,SAA4B;QAA5B,cAAS,GAAT,SAAS,CAAmB;QADhD,eAAU,GAAE,IAAI,8DAAO,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IACgB,CAAC;IAErD,yCAAQ,GAAR;IACA,CAAC;IACD,2CAAU,GAAV;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE;QAC7B,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,EAAE;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAC,EAAE;IAE9B,CAAC;IAbU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAG8B,iFAAkB;OAFrC,sBAAsB,CAclC;IAAD,6BAAC;CAAA;AAdkC;;;;;;;;;;;;ACTnC,mB;;;;;;;;;;;ACAA,yYAAyY,6BAA6B,SAAS,iBAAiB,WAAW,iBAAiB,eAAe,iBAAiB,YAAY,qG;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtd;AACD;AAC6B;AAO9E;IAIE,kCAAoB,SAA4B;QAAhD,iBAIS;QAJW,cAAS,GAAT,SAAS,CAAmB;QAHlD,eAAU,GAAY,IAAI,8DAAO,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAI3C,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,CACvC,UAAC,IAAI;YACL,KAAI,CAAC,SAAS,GAAE,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5B,CAAC,CAAE;IAAC,CAAC;IACT,2CAAQ,GAAR;IACA,CAAC;IACD,gDAAa,GAAb,UAAc,CAAC;QAAf,iBAQD;QAPE,IAAI,OAAO,GAAU,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,SAAS,CAC7C,UAAC,IAAI;YACH,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CACF;IAED,CAAC;IAnBY,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAK8B,iFAAkB;OAJrC,wBAAwB,CAoBpC;IAAD,+BAAC;CAAA;AApBoC;;;;;;;;;;;;ACTrC,mB;;;;;;;;;;;ACAA,6WAA6W,6BAA6B,SAAS,iBAAiB,WAAW,iBAAiB,eAAe,0G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7Z;AACC;AAC2B;AAM9E;IAKE,kCAAoB,SAA6B;QAAjD,iBAKC;QALmB,cAAS,GAAT,SAAS,CAAoB;QAHjD,gBAAW,GAAa,IAAI,gEAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAI9C,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,CACxC,UAAC,IAAI;YACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IACD,iDAAc,GAAd,UAAe,CAAC;QAAhB,iBAOC;QANC,IAAI,QAAQ,GAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC/C,UAAC,IAAI;YACH,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,CACF;IACH,CAAC;IArBU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAM+B,iFAAkB;OALtC,wBAAwB,CAsBpC;IAAD,+BAAC;CAAA;AAtBoC;;;;;;;;;;;;ACRrC,mB;;;;;;;;;;;ACAA,sMAAsM,sCAAsC,MAAM,WAAW,uIAAuI,YAAY,MAAM,2VAA2V,eAAe,mBAAmB,iBAAiB,mBAAmB,qBAAqB,mBAAmB,kBAAkB,oOAAoO,MAAM,uBAAuB,uCAAuC,aAAa,gJAAgJ,MAAM,+GAA+G,MAAM,qBAAqB,mBAAmB,8IAA8I,MAAM,kE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3jD;AAEnB;AAC+C;AAM9E;IAKE,6BAAoB,SAA6B;QAA7B,cAAS,GAAT,SAAS,CAAoB;IAChD,CAAC;IAEF,sCAAQ,GAAR;IACA,CAAC;IACD,wCAAU,GAAV;QAAA,iBAgBO;QAfN,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5C,UAAC,IAAI;YACA,KAAI,CAAC,UAAU,GAAC,IAAI,CAAC,IAAI,EAAE;QAChC,CAAC,EAAC,UAAC,KAAK;YAEN,IAAI,GAAG,GAAC,KAAK,CAAC,KAAK,CAAC;YACpB,kDAAI,CAAC;gBACH,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC;QACJ,CAAC,CAAC;IAAA,CAAC;IACP,4CAAc,GAAd;QACE,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,IAAI,CAAC,eAAe;QAC7C,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,UAAU,CAAC,KAAK,GAAC,IAAI,CAAC,YAAY;QACvC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAnCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAM+B,iFAAkB;OALtC,mBAAmB,CAoC/B;IAAD,0BAAC;CAAA;AApC+B;;;;;;;;;;;;ACThC,mB;;;;;;;;;;;ACAA,8OAA8O,MAAM,WAAW,4IAA4I,MAAM,yUAAyU,gBAAgB,mBAAmB,kBAAkB,mBAAmB,sBAAsB,wFAAwF,MAAM,uBAAuB,iLAAiL,cAAc,uE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1jC;AAEnB;AAC+C;AAO9E;IAEE,8BAAoB,SAA6B;QAA7B,cAAS,GAAT,SAAS,CAAoB;IAAI,CAAC;IAGtD,uCAAQ,GAAR;IACA,CAAC;IACD,0CAAW,GAAX;QAAA,iBAgBC;QAfH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9C,UAAC,IAAI;YACH,KAAI,CAAC,WAAW,GAAC,IAAI,CAAC,IAAI,EAAE;QAC9B,CAAC,EAAC,UAAC,KAAK;YACN,IAAI,GAAG,GAAC,KAAK,CAAC,KAAK,CAAC;YACpB,kDAAI,CAAC;gBACH,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC;QACJ,CAAC,CAAC;IACF,CAAC;IAED,6CAAc,GAAd;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAC,IAAI,CAAC,eAAe;QAC/C,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzD,CAAC;IA5BU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAG+B,iFAAkB;OAFtC,oBAAoB,CAgChC;IAAD,2BAAC;CAAA;AAhCgC;;;;;;;;;;;;;ACVjC;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXS;AAEZ;AACqB;AAMpD;IAEE,4BAAoB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAAI,CAAC;IAGnC,wCAAW,GAAX,UAAY,QAAiB;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,QAAQ,CAAC,CAAC,SAAS,CAEhF,UAAC,IAAI;YAEH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,kDAAI,CAAC;gBACH,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,kBAAkB;gBACxB,QAAQ,EAAE,6BAA6B;gBACvC,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC;QACJ,CAAC,EAAC,UAAC,KAAK;YACN,IAAI,GAAG,GAAC,KAAK,CAAC,KAAK,CAAC;YACpB,kDAAI,CAAC;gBACH,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC;QACJ,CAAC,CACF;IACJ,CAAC;IACD,uCAAU,GAAV,UAAW,OAAe;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4CAA4C,EAAE,OAAO,CAAC,CAAC,SAAS,CAClF,UAAC,IAAI;YAEH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,kDAAI,CAAC;gBACH,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,iBAAiB;gBACvB,QAAQ,EAAE,6BAA6B;gBACvC,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC;QACJ,CAAC,EAAE,UAAC,KAAK;YACP,IAAI,GAAG,GAAC,KAAK,CAAC,KAAK,CAAC;YACpB,kDAAI,CAAC;gBACH,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC;QACJ,CAAC,CACE;IACH,CAAC;IACH,4CAAe,GAAf;QACC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;IACxE,CAAC;IACD,0CAAa,GAAb,UAAc,OAAe;QAC3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4CAA4C,EAAC,IAAI,4DAAc,CAAC;YACvF,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;IACL,CAAC;IACD,4CAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;IACxE,CAAC;IACD,2CAAc,GAAd,UAAe,QAAiB;QAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,6CAA6C,EAAC,IAAI,4DAAc,CAAC;YACxF,IAAI,EAAC,QAAQ;SACd,CAAC,CAAC;IACL,CAAC;IAED,uCAAU,GAAV,UAAW,SAAgB;QAC3B,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,0CAA0C,GAAC,SAAS,CAAC,CAAC;IAC7E,CAAC;IAED,2CAAc,GAAd,UAAe,OAAe;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4CAA4C,EAAC,OAAO,CAAC,CAAC,SAAS,CAC1E,UAAC,IAAI;QACL,CAAC,CACF;IACL,CAAC;IAED,wCAAW,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4CAA4C,EAAC,OAAO,CAAC,CAAC,SAAS,CAC1E,UAAC,IAAI;QACL,CAAC,CACF;IACL,CAAC;IACD,wCAAW,GAAX,UAAY,KAAY;QACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,2CAA2C,GAAC,KAAK,CAAC,CAAC;IAC1E,CAAC;IACD,mDAAsB,GAAtB,UAAuB,QAAiB;QACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,6CAA6C,EAAC,QAAQ,CAAC,CAAC,SAAS,CAC9E,UAAC,IAAI;QACL,CAAC,CACF;IACH,CAAC;IACD,mCAAM,GAAN;QACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qCAAqC,CAAC,CAAC;IAEjE,CAAC;IA9GY,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,kDAAI;OAFnB,kBAAkB,CA+G9B;IAAD,yBAAC;CAAA;AA/G8B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".myButton {\\r\\n\\r\\n\\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#768d87', endColorstr='#6c7c7c',GradientType=0);\\r\\n\\tbackground-color:#a4a8a7;\\r\\n\\tborder-radius:11px;\\r\\n\\t\\r\\n\\tdisplay:inline-block;\\r\\n\\tcursor:pointer;\\r\\n\\tcolor:#ffffff;\\r\\n\\tfont-family:Arial;\\r\\n\\tfont-size:16px;\\r\\n\\tfont-weight:bold;\\r\\n\\tpadding:10px 15px 10px 15px;\\r\\n\\ttext-decoration:none;\\r\\n\\tfloat: right;\\r\\n\\tmargin-top: 4px;\\r\\n}\\r\\n.myButton:hover {\\r\\n\\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#6c7c7c', endColorstr='#768d87',GradientType=0);\\r\\n\\tbackground-color:#6c7c7c;\\r\\n}\\r\\n.myButton:active {\\r\\n\\tposition:relative;\\r\\n\\ttop:1px;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<div id=\\\"custom-bootstrap-menu\\\" class=\\\"navbar navbar-default \\\" role=\\\"navigation\\\">\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\"  style=\\\"font-size: 23px;font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\\\">Admin Facade</a>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"collapse navbar-collapse navbar-menubuilder\\\" style=\\\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\\\">\\r\\n        <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n            <li><a routerLink=\\\"/createcompany\\\">Create Company</a>\\r\\n            </li>\\r\\n            <li><a  routerLink=\\\"/getcompany\\\">Get Company</a>\\r\\n            </li>\\r\\n            <li><a routerLink=\\\"/getallcompanies\\\">Get All Companies</a>\\r\\n            </li>\\r\\n            <li><a routerLink=\\\"/createcustomer\\\">Create Customer</a>\\r\\n            </li>\\r\\n            <li><a routerLink=\\\"/getcustomer\\\">Get Customer</a>\\r\\n            </li>\\r\\n             <li><a routerLink=\\\"/getallcustomers\\\">GET All Customers</a>\\r\\n            </li>\\r\\n            <li></li>\\r\\n        </ul>\\r\\n        <a (click)=\\\"logOut()\\\"  class=\\\"myButton\\\" href=\\\"http://localhost:8080\\\">Log-out</a>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AppServicesService } from './../services/app-services.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'admin-web-api';\n  constructor(private _services: AppServicesService) {\n  }\n  logOut(){\n this._services.logOut().subscribe(\n   (resp)=>{\n     console.log(resp);\n     \n   }\n )\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {HttpModule} from '@angular/http';\nimport { CreateCompanyComponent } from './componennts/create-company/create-company.component';\nimport { GetCompanyComponent } from './componennts/get-company/get-company.component';\nimport { GetAllCompaniesComponent } from './componennts/get-all-companies/get-all-companies.component';\nimport { CreatCustomerComponent } from './componennts/creat-customer/creat-customer.component';\nimport { GetCustomerComponent } from './componennts/get-customer/get-customer.component';\nimport { GetAllCustomersComponent } from './componennts/get-all-customers/get-all-customers.component';\nimport { AppServicesService } from './../services/app-services.service';\nimport { HashLocationStrategy, LocationStrategy} from '@angular/common';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateCompanyComponent,\n    \n    GetCompanyComponent,\n    GetAllCompaniesComponent,\n    CreatCustomerComponent,\n    GetCustomerComponent,\n    GetAllCustomersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(\n      [\n        {\n          path: 'createcompany',\n          component: CreateCompanyComponent,\n        },\n         {\n          path: 'getcompany',\n          component: GetCompanyComponent,\n        },  {\n          path: 'getallcompanies',\n          component: GetAllCompaniesComponent,\n        },  {\n          path: 'createcustomer',\n          component: CreatCustomerComponent,\n        },     \n        {\n          path: 'getcustomer',\n          component: GetCustomerComponent,\n        },\n        {\n          path: 'getallcustomers',\n          component: GetAllCustomersComponent,\n        }\n            \n      ]\n    )\n  ],\n  providers: [AppServicesService,{provide:LocationStrategy,useClass:HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\nexport class Company{\r\n    public id : number; \r\n    public name :string;\r\n    public password :string;\r\n    public email :string;\r\n\r\n    constructor(public jsonid? : number,public jsonname? : string,\r\n        public jsonpassword? : string,public jsonemail? : string) \r\n        {\r\n            this.id =jsonid;\r\n            this.name=jsonname;\r\n            this.password=jsonpassword;\r\n            this.email=jsonemail;\r\n        }\r\n}","\r\nexport class Customer{\r\n    id : number;\r\n    name : string;\r\n    password : string;\r\n\r\n    constructor(public userid? : number,public username? : string,\r\n        public userpassword? : string){\r\n            this.id= userid;\r\n            this.name=username;\r\n            this.password=userpassword;\r\n    }\r\n}","module.exports = \"\"","module.exports = \"\\n<h2 style=\\\"font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\">NEW CUSTOMER:</h2>\\n<div style=\\\"width: 250px;\\\"> \\n<label for=\\\"inputEmail4\\\">&nbsp;NAME : &nbsp;</label> \\n<input type=\\\"text\\\"  class=\\\"form-control\\\"  name=\\\"nametxt\\\" placeholder=\\\"insert customer name\\\" [(ngModel)]=\\\"customerAdd.name\\\"><br>\\n\\n<label for=\\\"inputEmail4\\\">&nbsp;PASSWORD : &nbsp;</label> \\n<input type=\\\"password\\\"  class=\\\"form-control\\\"  name=\\\"passwordtxt\\\" placeholder=\\\"insert customer password\\\" [(ngModel)]=\\\"customerAdd.password\\\"><br>\\n</div>\\n<button (click)=\\\"addCustomer()\\\" >ADD CUSTOMER</button><br>\\n\\n<br>\\n<br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/common/customer';\nimport { AppServicesService } from './../../../services/app-services.service';\n@Component({\n  selector: 'app-creat-customer',\n  templateUrl: './creat-customer.component.html',\n  styleUrls: ['./creat-customer.component.css']\n})\nexport class CreatCustomerComponent implements OnInit {\n  customerAdd =new Customer(0,\"\",\"\");\n  constructor(private _services:AppServicesService) { }\n\n  ngOnInit() {\n   \n  }\n  addCustomer(){\n    this._services.addCustomer(this.customerAdd)\n    this.customerAdd.id = 0\n    this.customerAdd.username = \"\"\n    this.customerAdd.userpassword = \"\"\n  }\n}\n\n","module.exports = \"\"","module.exports = \"\\n\\n\\n    <h2 style=\\\"font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\"> NEW COMPANY:</h2>\\n\\n    <div style=\\\"width: 250px;\\\">\\n <label for=\\\"inputEmail4\\\">&nbsp;&nbsp;NAME : &nbsp;</label> <input type=\\\"text\\\"  placeholder=\\\"insert name\\\" class=\\\"form-control\\\" name=\\\"nametxt\\\" [(ngModel)]=\\\"companyAdd.name\\\"><br>\\n <label for=\\\"inputEmail4\\\">&nbsp;&nbsp;PASSWORD : &nbsp;</label> <input type=\\\"password\\\"  placeholder=\\\"insert password\\\"   class=\\\"form-control\\\" name=\\\"passwordtxt\\\" [(ngModel)]=\\\"companyAdd.password\\\"><br>\\n <label for=\\\"inputEmail4\\\">&nbsp;&nbsp;EMAIL : &nbsp;</label> <input type=\\\"text\\\"  placeholder=\\\"insert email\\\"   class=\\\"form-control\\\" name=\\\"emailtxt\\\" [(ngModel)]=\\\"companyAdd.email\\\"><br>\\n\\n<button (click)=\\\"addCompany()\\\">CREATE COMPANY</button>\\n<br>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/common/company';\nimport { AppServicesService } from './../../../services/app-services.service';\n\n@Component({\n  selector: 'app-create-company',\n  templateUrl: './create-company.component.html',\n  styleUrls: ['./create-company.component.css']\n})\nexport class CreateCompanyComponent implements OnInit {\n  companyAdd= new Company(0,\"\",\"\",\"\");\n  constructor(private _services:AppServicesService) { }\n\n  ngOnInit() {\n  }\n  addCompany(){\nthis._services.addCompany(this.companyAdd);\n    this.companyAdd.jsonid=0\n    this.companyAdd.jsonname = \"\"\n    this.companyAdd.jsonpassword = \"\"\n    this.companyAdd.jsonemail=\"\"\n\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<hr>\\n<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\">\\n  <tr>\\n    <th>\\n      ID\\n    </th>\\n    <th>\\n        NAME\\n    </th>\\n    <th>\\n          PASSWORD\\n    </th>          \\n    <th>\\n      EMAIL\\n    </th>\\n    <th>\\n      <button (click)=\\\"deleteCompany(i)\\\">X</button>\\n    </th>\\n  </tr>\\n  \\n  <tr *ngFor=\\\"let comp of companies; let i = index\\\">\\n    <td>{{comp.id}}</td>\\n    <td>{{comp.name}}</td>\\n    <td>{{comp.password}}</td>\\n    <td>{{comp.email}}</td>\\n    <td><button (click)=\\\"deleteCompany(i)\\\">X</button></td>\\n  </tr>\\n</table>\\n<br>\\n<br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/common/company';\nimport { AppServicesService } from './../../../services/app-services.service';\n\n@Component({\n  selector: 'app-get-all-companies',\n  templateUrl: './get-all-companies.component.html',\n  styleUrls: ['./get-all-companies.component.css']\n})\nexport class GetAllCompaniesComponent implements OnInit {\ncompanyAdd :Company = new Company(0,\"\",\"\",\"\");\n  companies:Company[];\n\n  constructor(private _services:AppServicesService) { \n   this._services.getAllCompenies().subscribe(\n      (resp)=>{\n      this.companies =resp.json();\n      } ) }\n  ngOnInit() {\n  }\n  deleteCompany(i){\n   let company:Company= this.companies[i];\nthis._services.deleteCompany(company).subscribe(\n  (resp)=>{\n    this.companies.splice(i,1);\n  }\n)\n  \n}\n}\n","module.exports = \"\"","module.exports = \"\\n<hr>\\n<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\">\\n  <tr>\\n    <th>\\n      ID\\n    </th>\\n    <th>\\n        NAME\\n    </th>\\n    <th>\\n          PASSWORD\\n    </th>          \\n   \\n    <th>\\n      <button (click)=\\\"deleteCustomer(i)\\\">X</button>\\n    </th>\\n  </tr>\\n  \\n  <tr *ngFor=\\\"let cust of customers; let i = index\\\">\\n    <td>{{cust.id}}</td>\\n    <td>{{cust.name}}</td>\\n    <td>{{cust.password}}</td>\\n  \\n    <td><button (click)=\\\"deleteCustomer(i)\\\">X</button></td>\\n  </tr>\\n</table>\\n<br>\\n<br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/common/customer';\nimport { AppServicesService } from './../../../services/app-services.service';\n@Component({\n  selector: 'app-get-all-customers',\n  templateUrl: './get-all-customers.component.html',\n  styleUrls: ['./get-all-customers.component.css']\n})\nexport class GetAllCustomersComponent implements OnInit {\n\n  customerAdd: Customer = new Customer(0, \"\", \"\");\n  customers: Customer[];\n\n  constructor(private _services: AppServicesService) {\n    this._services.getAllCustomers().subscribe(\n      (resp) => {\n        this.customers = resp.json();\n      })\n  }\n\n  ngOnInit() {\n  }\n  deleteCustomer(i) {\n    let customer: Customer = this.customers[i];\n    this._services.deleteCustomer(customer).subscribe(\n      (resp) => {\n        this.customers.splice(i, 1);\n      }\n    )\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<h2 style=\\\"font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\"> GET COMPANY</h2>\\n<div style=\\\"width: 200px;\\\">\\n<label for=\\\"inputEmail4\\\">&nbsp;&nbsp;ID:  &nbsp;</label> \\n<input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"insert company id\\\" name=\\\"compId\\\" [(ngModel)]=\\\"theId\\\">&nbsp;\\n<br>&nbsp;&nbsp;<button (click)=\\\"getCompany()\\\">GET COMPANY</button>\\n</div>\\n<hr>\\n<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\"*ngIf=\\\"companyAdd\\\">\\n  <tr><th>\\n      ID\\n    </th>\\n    <th>\\n        NAME\\n    </th>\\n    <th>\\n          PASSWORD\\n    </th>          \\n    <th>\\n      EMAIL\\n    </th>\\n    <tr >\\n      <td>{{companyAdd.id}}</td>\\n      <td>{{companyAdd.name}}</td>\\n      <td>{{companyAdd.password}}</td>\\n      <td>{{companyAdd.email}}</td>\\n    </tr>    \\n  </table>\\n\\n  <h2 style=\\\"font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\"> UPDATE COMPANY</h2>\\n  <label for=\\\"inputEmail4\\\">&nbsp;&nbsp;UPDATE PASSWORD: &nbsp;</label> \\n  <div style=\\\"width: 200px;\\\">\\n  &nbsp;  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"insert password\\\" name=\\\"updatePass\\\" [(ngModel)]=\\\"updatedPassword\\\"><br>\\n  &nbsp;&nbsp;<button (click)=\\\"changePassword()\\\" >CHANGE PASSWORD</button>\\n  <br><br>\\n  <label for=\\\"inputEmail4\\\">&nbsp;&nbsp;UPDATE EMAIL:  &nbsp;</label> \\n  &nbsp; <input type=\\\"text\\\" name=\\\"updateemail\\\" class=\\\"form-control\\\" placeholder=\\\"insert new email\\\" [(ngModel)]=\\\"updatedemail\\\"><br>\\n  &nbsp;&nbsp; <button (click)=\\\"changeEmail()\\\" >CHANGE EMAIL</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/common/company';\nimport swal from 'sweetalert2';\nimport { AppServicesService } from './../../../services/app-services.service';\n@Component({\n  selector: 'app-get-company',\n  templateUrl: './get-company.component.html',\n  styleUrls: ['./get-company.component.css']\n})\nexport class GetCompanyComponent implements OnInit {\n  theId:number\n  companyAdd:Company\n  updatedPassword:string\n  updatedemail:string\n  constructor(private _services: AppServicesService) {\n   }\n\n  ngOnInit() {\n  }\n  getCompany(){\n   this._services.getCompany(this.theId).subscribe(\n      (resp)=>{\n           this.companyAdd=resp.json()\n      },(error)=>\n      {\n        var err=error._body;\n        swal({\n          title: 'error',\n          text: err,\n          imageUrl: 'https://unsplash.it/400/200',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          animation: false\n        })   \n      })}\n  changePassword(){\n    this.companyAdd.password=this.updatedPassword\n    this._services.changePassword(this.companyAdd);\n  }\n\n  changeEmail(){\n    this.companyAdd.email=this.updatedemail\n    this._services.changeEmail(this.companyAdd);\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<h2 style=\\\"font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\"> GET CUSTOMER</h2>\\n\\n<div style=\\\"width: 300px\\\">\\n<label for=\\\"inputEmail4\\\">&nbsp;&nbsp;ID:  &nbsp;</label> \\n<input type=\\\"number\\\"  class=\\\"form-control\\\"  name=\\\"id\\\" placeholder=\\\"insert customer id\\\" [(ngModel)]=\\\"theId\\\"><br>\\n&nbsp;&nbsp;<button (click)=\\\"getCustomer()\\\">GET CUSTOMER</button>\\n</div>\\n\\n\\n\\n<hr>\\n<table style=\\\"margin-left: 10px\\\" class=\\\"table table-striped table-bordered\\\" *ngIf=\\\"customerAdd\\\">\\n  \\n  <tr>\\n    <th>\\n      ID\\n    </th>\\n    <th>\\n        NAME\\n    </th>\\n    <th>\\n          PASSWORD\\n    </th>     \\n     <tr >\\n      <td>{{customerAdd.id}}</td>\\n      <td>{{customerAdd.name}}</td>\\n      <td>{{customerAdd.password}}</td>\\n    \\n      \\n    </tr>    \\n  </table>\\n <br>  <label for=\\\"inputEmail4\\\">&nbsp;&nbsp;UPDATE PASSWORD: &nbsp;</label> \\n    <input type=\\\"text\\\"  style=\\\"width: 300px\\\" class=\\\"form-control\\\"  name=\\\"updatePass\\\" [(ngModel)]=\\\"updatedPassword\\\"placeholder=\\\"insert new password\\\">&nbsp;\\n  <br>&nbsp; <button (click)=\\\"changePassword()\\\" >CHANGE PASSWORD</button>\\n \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/common/customer';\nimport swal from 'sweetalert2';\nimport { AppServicesService } from './../../../services/app-services.service';\n\n@Component({\n  selector: 'app-get-customer',\n  templateUrl: './get-customer.component.html',\n  styleUrls: ['./get-customer.component.css']\n})\nexport class GetCustomerComponent implements OnInit {\n  theId:number;\n  constructor(private _services: AppServicesService) { }\n  customerAdd:Customer\n  updatedPassword:string\n  ngOnInit() {\n  } \n  getCustomer(){\nthis._services.getCustomer(this.theId).subscribe(\n  (resp)=> {\n    this.customerAdd=resp.json()\n  },(error)=>{\n    var err=error._body;\n    swal({\n      title: 'error',\n      text: err,\n      imageUrl: 'https://unsplash.it/400/200',\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      animation: false\n    }) \n  })\n  }\n\n  changePassword(){\n    this.customerAdd.password=this.updatedPassword\n   this._services.changeCustomerPassword(this.customerAdd);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Injectable } from '@angular/core';\nimport { Customer } from 'src/app/common/customer';\nimport swal from 'sweetalert2';\nimport { Http ,RequestOptions} from '@angular/http';\nimport { Company } from 'src/app/common/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServicesService {\n\n  constructor(private _http:Http) { }\n\n\n  addCustomer(customer:Customer){\n     this._http.post(\"http://localhost:8080/coupon/createCustomer\", customer).subscribe\n     (\n       (resp) => {\n         \n         console.log(resp);\n     \n         swal({\n           title: 'Sweet!',\n           text: 'a new customer !',\n           imageUrl: 'https://unsplash.it/400/200',\n           imageWidth: 400,\n           imageHeight: 200,\n           imageAlt: 'Custom image',\n           animation: false\n         }) \n       },(error)=>{\n         var txt=error._body;\n         swal({\n           title: 'error',\n           text: txt,\n           imageUrl: 'https://unsplash.it/400/200',\n           imageWidth: 400,\n           imageHeight: 200,\n           imageAlt: 'Custom image',\n           animation: false\n         }) \n       }\n     )\n  }\n  addCompany(company:Company){\n    this._http.post(\"http://localhost:8080/coupon/CreateCompany\", company).subscribe(\n  (resp) => {\n        \n    console.log(resp);\n   \n    swal({\n      title: 'Sweet!',\n      text: 'a new company !',\n      imageUrl: 'https://unsplash.it/400/200',\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      animation: false\n    })        \n  }, (error)=>{\n    var err=error._body;\n    swal({\n      title: 'error!',\n      text: err,\n      imageUrl: 'https://unsplash.it/400/200',\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      animation: false\n    })  \n  }\n    )\n  }\ngetAllCompenies(){\n return  this._http.get(\"http://localhost:8080/coupon/getAllCompanies\");\n}\ndeleteCompany(company:Company){\n  return this._http.delete(\"http://localhost:8080/coupon/removeCompany\",new RequestOptions({\n    body: company\n  }))\n}\ngetAllCustomers(){\n  return this._http.get(\"http://localhost:8080/coupon/getAllCustomers\");\n}\ndeleteCustomer(customer:Customer){\n  return this._http.delete(\"http://localhost:8080/coupon/removeCustomer\",new RequestOptions({\n    body:customer\n  }))\n}\n\ngetCompany(companyId:number){\nreturn  this._http.get(\"http://localhost:8080/coupon/getCompany/\"+companyId);\n}\n\nchangePassword(company:Company){\n  this._http.put(\"http://localhost:8080/coupon/updateCompany\",company).subscribe(\n      (resp)=>{\n      }\n    )\n}\n\nchangeEmail(company:Company){\n  this._http.put(\"http://localhost:8080/coupon/updateCompany\",company).subscribe(\n      (resp)=>{\n      }\n    )\n}\ngetCustomer(theId:number){\n return this._http.get(\"http://localhost:8080/coupon/getCustomer/\"+theId);\n}\nchangeCustomerPassword(customer:Customer){\n  this._http.put(\"http://localhost:8080/coupon/updateCustomer\",customer).subscribe(\n    (resp)=>{\n    }\n  )\n}\nlogOut(){\n return this._http.delete(\"http://localhost:8080/coupon/logOut\");\n  \n}\n} "],"sourceRoot":""}